{"version":3,"sources":["components/button.js","components/textarea.js","components/radioGroup.js","components/checkboxGroup.js","components/shortTable.js","components/detailTable.js","components/app.js","serviceWorker.js","index.js"],"names":["withStyles","button","width","marginBottom","props","classes","children","primary","onClick","react_default","a","createElement","Button_default","color","className","variant","components_textarea","label","value","onChange","TextField_default","fullWidth","multiline","rows","margin","radioGroup","name","items","RadioGroup_default","aria-label","map","item","id","FormControlLabel_default","key","control","Radio_default","disabled","checkboxGroup","keys","Object","FormGroup_default","Checkbox_default","checked","shortTable","names","relation","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","component","scope","join","length","detailTable","addNumbers","answers","answer","task","shuffle","array","i","j","Math","floor","random","temp","dst","type","tasks","ct","push","rndDist","c","ceil","seqDist","App","state","checkboxes","distributionTypes","distributionType","error","results","handleChange","event","_this","setState","defineProperty","target","handleCheck","handleShuffle","split","handleDistribute","_this$state","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","this","_this$state2","AppBar_default","position","Toolbar_default","Typography_default","Grid_default","container","xs","components_button","FormControl_default","FormLabel_default","style","padding","paddingLeft","formControl","marginTop","Component","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7de31395.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  button: {\n    width: '100%',\n    marginBottom: 10,\n  }\n};\n\nexport default withStyles(styles)(function (props) {\n  const { classes, children, primary, onClick } = props;\n  return (\n    <Button\n      color={primary ? 'primary' : 'default'}\n      className={classes.button}\n      onClick={onClick}\n      variant=\"outlined\"\n    >\n      {children}\n    </Button>\n  );\n});","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nexport default function (props) {\n  const { label, value, onChange } = props;\n  return (<TextField\n    fullWidth\n    label={label}\n    value={value}\n    multiline\n    rows=\"28\"\n    margin=\"normal\"\n    variant=\"outlined\"\n    onChange={onChange}\n  />);\n}","import React from 'react';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nexport default function (props) {\n  const { label, name, value, onChange, items } = props;\n  return (\n    <RadioGroup\n      aria-label={label}\n      name={name}\n      value={value}\n      onChange={onChange}\n    >\n      {items.map((item, id) => (\n        <FormControlLabel\n          key={id}\n          value={item.value}\n          control={<Radio color=\"primary\"/>}\n          label={item.label}\n          disabled={item.disabled}\n        />\n      ))}\n    </RadioGroup>\n  );\n}","import React from 'react';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nexport default function (props) {\n  let { items, onChange } = props;\n  let keys = Object.keys(items);\n  return (\n    <FormGroup>\n      {keys.map(key => (\n        <FormControlLabel\n          key={key}\n          control={<Checkbox\n            checked={items[key].value}\n            onChange={onChange(key)}\n            value={key}\n            color=\"primary\"\n          />}\n          label={items[key].label}\n        />\n      ))}\n    </FormGroup>\n  );\n}","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport default function (props) {\n  const { names, relation } = props;\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Member</TableCell>\n          <TableCell>Tasks</TableCell>\n          <TableCell>Count</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {names.map((name, id) =>(\n          <TableRow key={id}>\n            <TableCell component=\"th\" scope=\"row\">{name}</TableCell>\n            <TableCell>{relation[name].join(', ')}</TableCell>\n            <TableCell>{relation[name].length}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nexport default function (props) {\n  const { addNumbers, answers } = props;\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          {addNumbers && <TableCell>Number</TableCell>}\n          <TableCell>Task</TableCell>\n          <TableCell>Member</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {answers.map((answer, id) => (\n          <TableRow key={id}>\n            {addNumbers && <TableCell>{id + 1}</TableCell>}\n            <TableCell>{answer.task}</TableCell>\n            <TableCell>{answer.name}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport Button from './button';\nimport Textarea from './textarea';\nimport RadioGroup from './radioGroup';\nimport CheckboxGroup from './checkboxGroup';\nimport ShortTable from './shortTable';\nimport DetailTable from './detailTable';\n\nconst styles = {\n  container: {\n    padding: 20,\n  }\n};\n\nfunction shuffle (array) {\n  for(let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    let temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nfunction rndDist(names, tasks, answers, ct) {\n  for (let i = 0; i < Math.floor(tasks.length/names.length); i++) {\n    names = shuffle(names);\n    for (let j = 0; j < names.length; j++) {\n      answers.push({task: tasks[i*names.length+j], name: names[j]});\n      ct[names[j]].push(i*names.length+j+1);\n    }\n  }\n  names = shuffle(names);\n  for (let i = Math.floor(tasks.length/names.length)*names.length; i < tasks.length; i++){\n    answers.push({task: tasks[i], name: names[i%names.length]});\n    ct[names[i%names.length]].push(i+1);\n  }\n}\n\nfunction seqDist(names, tasks, answers, ct) {\n  let c = 0;\n  for (let i = 0; i < names.length; i++) {\n    for (let j = 0; j < Math.ceil(tasks.length/names.length) - ( (i < tasks.length % names.length) || (tasks.length % names.length === 0) ? 0 : 1); j++){\n      answers.push({task: tasks[c], name: names[i]});\n      c++;\n      ct[names[i]].push(c);\n    }\n  }\n}\n\nfunction massDist () {\n\n}\n\nfunction dst(type, names, tasks, answers, ct) {\n  switch(type) {\n  case 'random':\n    return rndDist(names, tasks, answers, ct);\n  case 'sequential':\n    return seqDist(names, tasks, answers, ct);\n  case 'weight':\n    return massDist(names, tasks, answers, ct);\n  default:\n    return -1;\n  }\n}\n\nclass App extends Component {\n\n  state = {\n    checkboxes: {\n      addNumbers: {\n        label: 'Show task numbers',\n        value: true,\n      },\n    },\n    distributionTypes: [\n      {\n        label: 'Random',\n        value: 'random'\n      },\n      {\n        label: 'Sequential',\n        value: 'sequential'\n      },\n      {\n        label: 'Weight',\n        value: 'weight',\n        disabled: true\n      }\n    ],\n    names: '',\n    tasks: '',\n    distributionType: 'random',\n    error: false,\n    results: false\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  }\n\n  handleCheck = name => (event, value) => {\n    this.setState((state, props) => {\n      state.checkboxes[name].value = value;\n      return state;\n    });\n  }\n\n  handleShuffle = name => event => {\n    this.setState((state, props) => {\n      let items = state[name].split('\\n');\n      state[name] = shuffle(items).join('\\n');\n      return state;\n    });\n  }\n\n  handleDistribute = event => {\n    let { names, tasks, distributionType } = this.state,\n      answers = [],\n      relation = {};// name - task[]\n    names = names.split('\\n');\n    tasks = tasks.split('\\n');\n    for (let name of names)\n      relation[name] = [];\n    if (names.length < 2 || tasks.length < 2) {\n      this.setState({ error: true });\n      return;\n    }\n    dst(distributionType, names, tasks, answers, relation);\n    this.setState({\n      error: false,\n      results: { names, answers, relation }\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { error, results, checkboxes, distributionTypes } = this.state;\n    const addNumbers = checkboxes.addNumbers.value;\n\n    return (\n      <div className=\"App\">\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Great random\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Grid container>\n          <Grid item xs={3}>\n            <div className={classes.container}>\n              <Textarea\n                label=\"Members\"\n                value={this.state.names}\n                onChange={this.handleChange('names')}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={9}>\n            <div className={classes.container}>\n              <Textarea\n                label=\"Tasks\"\n                value={this.state.tasks}\n                onChange={this.handleChange('tasks')}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <div className={classes.container}>\n              <Button primary onClick={this.handleDistribute}>\n                Distribute\n              </Button>\n              <Button onClick={this.handleShuffle('names')}>\n                Shuffle members\n              </Button>\n              <Button onClick={this.handleShuffle('tasks')}>\n                Shuffle tasks\n              </Button>\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <div className={classes.container}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Distribution type</FormLabel>\n                <RadioGroup\n                  label=\"DistributionType\"\n                  name=\"distributionType\"\n                  value={this.state.distributionType}\n                  onChange={this.handleChange('distributionType')}\n                  items={distributionTypes}\n                />\n              </FormControl>\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <div className={classes.container}>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Parameters</FormLabel>\n                <Typography variant=\"body1\" style={{ padding: 12, paddingLeft: 0 }}>\n                  No parameters\n                </Typography>\n              </FormControl>\n            </div>\n          </Grid>\n          <Grid item xs={3}>\n            <div className={classes.container}>\n              <FormControl component=\"fieldset\" className={classes.formControl}>\n                <FormLabel component=\"legend\">Options:</FormLabel>\n                <CheckboxGroup\n                  items={checkboxes}\n                  onChange={this.handleCheck}\n                />\n              </FormControl>\n            </div>\n          </Grid>\n          {error &&<Grid item xs={12}>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" color=\"inherit\">\n                Error\n              </Typography>\n            </div>\n          </Grid>}\n          {results && <Grid item xs={12}>\n            <div className={classes.container}>\n              <Typography variant=\"h6\" color=\"inherit\">Short</Typography>\n              <ShortTable\n                names={results.names}\n                relation={results.relation}\n              />\n              <Typography variant=\"h6\" color=\"inherit\" style={{ marginTop: 20 }}>Details</Typography>\n              <DetailTable\n                addNumbers={addNumbers}\n                answers={results.answers}\n              />\n            </div>\n          </Grid>}\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}